# Use the official Node.js image as the base image
FROM node:22-alpine

# Set the working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json (or yarn.lock) to the container
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/
# Install dependencies
RUN npm install

# Copy the rest of your application code to the container
COPY apps/backend ./apps/backend

# Build the TypeScript application
WORKDIR /app/apps/backend
RUN npm run build

# Ensure drizzle migrations are accessible (they should be copied with the backend code)
# Let's verify the structure
RUN ls -la && ls -la drizzle/ && ls -la drizzle/meta/

# Create startup script for migrations and app startup
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'set -e' >> /app/start.sh && \
    echo 'echo "ðŸ”„ Waiting for database to be ready..."' >> /app/start.sh && \
    echo 'sleep 5' >> /app/start.sh && \
    echo 'echo "ðŸ”„ Running database migrations..."' >> /app/start.sh && \
    echo 'cd /app/apps/backend' >> /app/start.sh && \
    echo 'echo "Current directory: $(pwd)"' >> /app/start.sh && \
    echo 'echo "Drizzle folder contents:"' >> /app/start.sh && \
    echo 'ls -la drizzle/ || echo "Drizzle folder not found"' >> /app/start.sh && \
    echo 'echo "Meta folder contents:"' >> /app/start.sh && \
    echo 'ls -la drizzle/meta/ || echo "Meta folder not found"' >> /app/start.sh && \
    echo 'npm run db:migrate' >> /app/start.sh && \
    echo 'echo "âœ… Starting application..."' >> /app/start.sh && \
    echo 'npm start' >> /app/start.sh && \
    chmod +x /app/start.sh

# Expose the port your app runs on
EXPOSE 5555

# Command to start your application
CMD ["/app/start.sh"]
