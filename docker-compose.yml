services:
  database:
    image: postgres:17-alpine
    container_name: speedball-db
    ports:
      - "1001:5432"
    environment:
      POSTGRES_DB: speedball
      POSTGRES_USER: speedball
      POSTGRES_PASSWORD: speedball123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - speedball-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U speedball -d speedball"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: speedball-backend
    ports:
      - "2001:5555"
    environment:
      NODE_ENV: production
      PORT: 5555
      DATABASE_URL: postgresql://speedball:speedball123@database:5432/speedball
      SESSION_SECRET: your-production-session-secret-change-this
      # Note: Using MemoryStore for simplicity. In real production, use Redis
    depends_on:
      database:
        condition: service_healthy
    networks:
      - speedball-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: speedball-frontend
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE_URL: http://backend:5555
    depends_on:
      - backend
    networks:
      - speedball-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  speedball-network:
    driver: bridge


